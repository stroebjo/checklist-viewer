@mixin my-placeholder() {

	// WebKit, Blink, Edge
	&::-webkit-input-placeholder {
		@content;
	}

	// Mozilla Firefox 19+
	&::-moz-placeholder {
		@content;

		// Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
		opacity: 1;
	}

	//  Internet Explorer 10-11
	&:-ms-input-placeholder {
		@content;
	}

	// Standard (https://drafts.csswg.org/selectors-4/#placeholder)
	&:placeholder-shown {
		@content;
	}
}


//
// Alternative for text-indent -999em
//
// Use with: @include text-indent();
//
@mixin text-indent() {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}

//
// Reset default list formating to zero.
//
@mixin naked-list() {
	margin: 0;
	padding: 0;
	list-style: none;
}

// Wrapper function to route ,-seperated parameters
// through Sass so postCSS gets them.
@function svg-load($param) {
	@return unquote("svg-load(#{$param})");
}

// Include SVG file, with optional fill parameter.
//
// Uses postcss-inline-svg for SVG + fill, and uses
// postcss-assets to get width/height of file.
@mixin postcss-svg($param, $size: 1) {
	$key: $param;

	// check for optional fill-argumanet (`file.svg, #fff`)
	@if (str-index($param, ",")) {
		$key: str-slice($param, 0, (str-index($param, ",") - 1));
	}

	background: svg-load($param);
	background-repeat: no-repeat;

	@if $size != 1 {
		width: calc( width(#{$key}) * #{$size});
		height: calc( height(#{$key}) * #{$size});
	} @else {
		width: width($key);
		height: height(#{$key});
	}
}


@mixin postcss-inline($key, $size: 1) {
	background: inline($key);


	@if $size != 1 {
		width: calc( width(#{$key}) * #{$size});
		height: calc( height(#{$key}) * #{$size});
	} @else {
		width: width($key);
		height: height(#{$key});
	}
}

